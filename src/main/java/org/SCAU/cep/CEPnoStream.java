package org.SCAU.cep;

import org.SCAU.model.socialMediaStocks;
import org.apache.flink.api.common.eventtime.SerializableTimestampAssigner;
import org.apache.flink.api.common.eventtime.WatermarkStrategy;
import org.apache.flink.api.common.functions.RuntimeContext;
import org.apache.flink.api.common.serialization.SimpleStringSchema;
import org.apache.flink.cep.CEP;
import org.apache.flink.cep.PatternStream;
import org.apache.flink.cep.RichPatternSelectFunction;
import org.apache.flink.cep.pattern.Pattern;
import org.apache.flink.cep.pattern.conditions.SimpleCondition;
import org.apache.flink.configuration.Configuration;
import org.apache.flink.streaming.api.datastream.KeyedStream;
import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
import org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer;

import java.text.ParseException;
import java.time.Duration;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Properties;

public class CEPnoStream {
    public static void main(String[] args) throws Exception {
      StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();

        //替换这里 数据源---------------
//        List<String>strings=new ArrayList<>();
//        strings.add("2018-09-05,FB,167.17999267578125,167.17999267578125,171.1300048828125,166.6699981689453,169.49000549316406,31226700.0");
//        strings.add("2018-09-05,TWTR,32.72999954223633,32.72999954223633,34.70000076293945,32.5099983215332,34.650001525878906,36051100.0");
//        strings.add("2018-09-05,SNAP,10.109999656677246,10.109999656677246,10.510000228881836,10.0600004196167,10.5,24701500.0");
//        strings.add("2018-09-05,ETSY,47.38999938964844,47.38999938964844,50.45000076293945,46.43000030517578,50.439998626708984,3427700.0");
//        strings.add("2018-09-06,FB,162.52999877929688,162.52999877929688,166.97999572753906,160.0,166.97999572753906,41514800.0");
//        strings.add("2018-09-06,TWTR,30.809999465942383,30.809999465942383,32.95000076293945,30.6200008392334,32.86000061035156,36023600.0");
//        strings.add("2018-09-06,SNAP,9.800000190734863,9.800000190734863,10.180000305175781,9.619999885559082,10.109999656677246,33118900.0");
//        strings.add("2018-09-06,ETSY,46.119998931884766,46.119998931884766,47.38999938964844,45.5,47.33000183105469,2708400.0");
//        strings.add("2018-09-07,FB,163.0399932861328,163.0399932861328,164.6300048828125,160.16000366210938,160.30999755859375,24300600.0");
//        strings.add("2018-09-07,TWTR,30.489999771118164,30.489999771118164,31.389999389648438,29.81999969482422,30.309999465942383,31484200.0");
//        strings.add("2018-09-07,SNAP,9.930000305175781,9.930000305175781,10.1899995803833,9.630000114440918,9.75,26510900.0");
//        strings.add("2018-09-07,ETSY,47.13999938964844,47.13999938964844,48.22999954223633,45.17900085449219,45.619998931884766,1953900.0");
//        strings.add("2018-09-10,FB,164.17999267578125,164.17999267578125,165.00999450683594,162.16000366210938,163.50999450683594,20197700.0");
//        strings.add("2018-09-10,TWTR,30.540000915527344,30.540000915527344,30.600000381469727,29.950000762939453,30.5,17805800.0");
//        strings.add("2018-09-10,SNAP,9.739999771118164,9.739999771118164,9.899999618530273,9.550000190734863,9.779999732971191,29031900.0");
//        strings.add("2018-09-10,ETSY,47.189998626708984,47.189998626708984,47.599998474121094,46.41999816894531,47.400001525878906,2203200.0");
//        strings.add("2018-09-11,FB,165.94000244140625,165.94000244140625,167.19000244140625,163.72000122070312,163.94000244140625,20457100.0");
//        strings.add("2018-09-11,TWTR,30.889999389648438,30.889999389648438,31.440000534057617,30.350000381469727,30.440000534057617,16000100.0");
//        strings.add("2018-09-11,SNAP,9.890000343322754,9.890000343322754,10.149999618530273,9.850000381469727,9.850000381469727,31632600.0");
//        strings.add("2018-09-11,ETSY,49.400001525878906,49.400001525878906,49.59000015258789,46.58000183105469,46.619998931884766,2390300.0");
//        strings.add("2018-09-12,FB,162.0,162.0,164.49000549316406,161.8000030517578,163.25,24078100.0");
//        strings.add("2018-09-12,TWTR,29.75,29.75,30.829999923706055,29.25,30.610000610351562,29845200.0");
//        strings.add("2018-09-12,SNAP,9.199999809265137,9.199999809265137,9.430000305175781,8.899999618530273,9.289999961853027,52102700.0");
//        strings.add("2018-09-12,ETSY,49.16999816894531,49.16999816894531,49.88999938964844,48.060001373291016,49.439998626708984,2202700.0");
//        strings.add("2018-09-13,FB,161.36000061035156,161.36000061035156,163.32000732421875,160.86000061035156,162.0,25453800.0");
//        strings.add("2018-09-13,TWTR,30.389999389648438,30.389999389648438,30.56999969482422,29.860000610351562,30.100000381469727,18522500.0");
//        strings.add("2018-09-13,SNAP,9.350000381469727,9.350000381469727,9.420000076293945,9.100000381469727,9.170000076293945,24790700.0");
//        strings.add("2018-09-13,ETSY,50.54999923706055,50.54999923706055,50.90999984741211,49.08000183105469,49.08000183105469,3031000.0");
//        strings.add("2018-09-14,FB,162.32000732421875,162.32000732421875,162.83999633789062,160.33999633789062,161.72000122070312,21770400.0");
//        strings.add("2018-09-14,TWTR,30.1200008392334,30.1200008392334,30.770000457763672,30.059999465942383,30.450000762939453,13474700.0");
//        strings.add("2018-09-14,SNAP,9.289999961853027,9.289999961853027,9.835000038146973,9.260000228881836,9.449999809265137,30549900.0");
//        strings.add("2018-09-14,ETSY,52.849998474121094,52.849998474121094,53.25,50.59000015258789,51.08000183105469,4280800.0");
//        strings.add("2018-09-17,FB,160.5800018310547,160.5800018310547,162.05999755859375,159.77000427246094,161.9199981689453,21005300.0");
//        strings.add("2018-09-17,TWTR,28.860000610351562,28.860000610351562,29.280000686645508,28.43000030517578,29.049999237060547,30592300.0");
//        strings.add("2018-09-17,SNAP,9.180000305175781,9.180000305175781,9.369999885559082,9.09000015258789,9.279999732971191,22146400.0");
//        strings.add("2018-09-17,ETSY,50.099998474121094,50.099998474121094,53.189998626708984,48.5099983215332,52.400001525878906,6666100.0");
//        strings.add("2018-09-18,FB,160.3000030517578,160.3000030517578,161.75999450683594,158.8699951171875,159.38999938964844,22465200.0");
//        strings.add("2018-09-18,TWTR,29.219999313354492,29.219999313354492,29.6299991607666,28.75,28.84000015258789,15856800.0");
//        strings.add("2018-09-18,SNAP,9.130000114440918,9.130000114440918,9.380000114440918,9.079999923706055,9.149999618530273,18052000.0");
//        strings.add("2018-09-18,ETSY,51.630001068115234,51.630001068115234,52.099998474121094,50.06999969482422,50.52000045776367,3416400.0");
//        strings.add("2018-09-19,FB,163.05999755859375,163.05999755859375,163.44000244140625,159.47999572753906,160.0800018310547,19629000.0");
//        strings.add("2018-09-19,TWTR,29.520000457763672,29.520000457763672,29.559999465942383,28.81999969482422,29.149999618530273,16023500.0");
//        strings.add("2018-09-19,SNAP,9.15999984741211,9.15999984741211,9.210000038146973,9.020000457763672,9.079999923706055,33333100.0");
//        strings.add("2018-09-19,ETSY,50.15999984741211,50.15999984741211,52.189998626708984,49.029998779296875,51.66999816894531,2531000.0");
//        strings.add("2018-09-20,FB,166.02000427246094,166.02000427246094,166.4499969482422,164.47000122070312,164.5,18936000.0");
//        strings.add("2018-09-20,TWTR,29.850000381469727,29.850000381469727,30.020000457763672,29.239999771118164,29.700000762939453,15378000.0");
//        strings.add("2018-09-20,SNAP,9.210000038146973,9.210000038146973,9.239999771118164,8.670000076293945,9.029999732971191,26550400.0");
//        strings.add("2018-09-20,ETSY,48.75,48.75,50.7599983215332,48.290000915527344,50.290000915527344,2895500.0");
//        strings.add("2018-09-21,FB,162.92999267578125,162.92999267578125,167.25,162.80999755859375,166.63999938964844,45994800.0");
//        strings.add("2018-09-21,TWTR,28.5,28.5,29.950000762939453,28.489999771118164,29.860000610351562,43122600.0");
//        strings.add("2018-09-21,SNAP,9.140000343322754,9.140000343322754,9.3100004196167,9.010000228881836,9.180000305175781,51966600.0");
//        strings.add("2018-09-21,ETSY,47.540000915527344,47.540000915527344,49.10499954223633,47.380001068115234,48.84000015258789,3236000.0");
//        strings.add("2018-09-24,FB,165.41000366210938,165.41000366210938,165.6999969482422,160.8800048828125,161.02999877929688,19222800.0");
//        strings.add("2018-09-24,TWTR,28.600000381469727,28.600000381469727,29.1200008392334,27.93000030517578,28.329999923706055,20249000.0");
//        strings.add("2018-09-24,SNAP,8.949999809265137,8.949999809265137,9.40999984741211,8.859999656677246,9.050000190734863,34747400.0");
//        strings.add("2018-09-24,ETSY,49.20000076293945,49.20000076293945,49.29999923706055,46.36000061035156,47.11000061035156,1765200.0");
//        strings.add("2018-09-25,FB,164.91000366210938,164.91000366210938,165.58999633789062,161.14999389648438,161.99000549316406,27622800.0");
//        strings.add("2018-09-25,TWTR,29.110000610351562,29.110000610351562,29.239999771118164,28.440000534057617,28.75,16130300.0");
//        strings.add("2018-09-25,SNAP,9.050000190734863,9.050000190734863,9.420000076293945,9.029999732971191,9.1899995803833,37268900.0");
//        strings.add("2018-09-25,ETSY,50.439998626708984,50.439998626708984,50.540000915527344,49.0099983215332,49.5,2112000.0");
//        strings.add("2018-09-26,FB,166.9499969482422,166.9499969482422,169.3000030517578,164.2100067138672,164.3000030517578,25252200.0");
//        strings.add("2018-09-26,TWTR,29.010000228881836,29.010000228881836,29.450000762939453,28.799999237060547,29.200000762939453,12742100.0");
//        strings.add("2018-09-26,SNAP,8.989999771118164,8.989999771118164,9.109999656677246,8.875,9.09000015258789,21160800.0");
//        strings.add("2018-09-26,ETSY,50.900001525878906,50.900001525878906,51.38999938964844,49.680999755859375,50.66999816894531,2110100.0");
//        strings.add("2018-09-27,FB,168.83999633789062,168.83999633789062,171.77000427246094,167.2100067138672,167.5500030517578,27266900.0");
//        strings.add("2018-09-27,TWTR,29.420000076293945,29.420000076293945,29.690000534057617,28.8799991607666,29.059999465942383,14830500.0");
//        strings.add("2018-09-27,SNAP,8.800000190734863,8.800000190734863,9.0600004196167,8.770000457763672,9.020000457763672,18060400.0");
//        strings.add("2018-09-27,ETSY,52.0099983215332,52.0099983215332,52.11000061035156,50.93000030517578,51.18000030517578,1347200.0");
//        strings.add("2018-09-28,FB,164.4600067138672,164.4600067138672,168.7899932861328,162.55999755859375,168.3300018310547,34265600.0");
//        strings.add("2018-09-28,TWTR,28.459999084472656,28.459999084472656,29.280000686645508,28.40999984741211,29.25,22719600.0");
//        strings.add("2018-09-28,SNAP,8.479999542236328,8.479999542236328,8.779999732971191,8.399999618530273,8.75,31800400.0");
//        strings.add("2018-09-28,ETSY,51.380001068115234,51.380001068115234,52.56999969482422,51.15999984741211,51.650001525878906,1523100.0");
//        strings.add("2018-10-01,FB,162.44000244140625,162.44000244140625,165.8800048828125,161.25999450683594,163.02999877929688,26407700.0");
//        strings.add("2018-10-01,TWTR,28.309999465942383,28.309999465942383,28.700000762939453,28.0,28.510000228881836,20538900.0");
//        strings.add("2018-10-01,SNAP,8.359999656677246,8.359999656677246,8.569999694824219,8.225000381469727,8.5,23025500.0");
//        strings.add("2018-10-01,ETSY,49.959999084472656,49.959999084472656,52.2599983215332,49.689998626708984,51.810001373291016,1938800.0");
//        strings.add("2018-10-02,FB,159.3300018310547,159.3300018310547,162.27999877929688,158.6699981689453,161.5800018310547,36031000.0");
//        strings.add("2018-10-02,TWTR,28.190000534057617,28.190000534057617,28.6200008392334,27.90999984741211,28.139999389648438,17714400.0");
//        strings.add("2018-10-02,SNAP,8.180000305175781,8.180000305175781,8.359999656677246,8.010000228881836,8.319999694824219,25429300.0");
//        strings.add("2018-10-02,ETSY,47.52000045776367,47.52000045776367,50.48699951171875,47.380001068115234,50.040000915527344,2192100.0");
//        strings.add("2018-10-03,FB,162.42999267578125,162.42999267578125,163.66000366210938,159.52999877929688,160.0,23109500.0");
//        strings.add("2018-10-03,TWTR,29.010000228881836,29.010000228881836,29.1200008392334,28.25,28.3799991607666,19358700.0");
//        strings.add("2018-10-03,SNAP,8.229999542236328,8.229999542236328,8.329999923706055,8.130000114440918,8.170000076293945,14961100.0");
//        strings.add("2018-10-03,ETSY,48.13999938964844,48.13999938964844,48.439998626708984,47.43000030517578,47.689998626708984,1972700.0");
//        strings.add("2018-10-04,FB,158.85000610351562,158.85000610351562,161.4600067138672,157.35000610351562,161.4600067138672,25739600.0");
//        strings.add("2018-10-04,TWTR,28.229999542236328,28.229999542236328,28.760000228881836,27.8700008392334,28.75,21120400.0");
//        strings.add("2018-10-04,SNAP,7.800000190734863,7.800000190734863,7.985000133514404,7.559999942779541,7.949999809265137,36960000.0");
//        strings.add("2018-10-04,ETSY,46.02000045776367,46.02000045776367,48.45000076293945,45.40999984741211,47.9900016784668,2500700.0");
//        strings.add("2018-10-05,FB,157.3300018310547,157.3300018310547,160.89999389648438,156.1999969482422,159.2100067138672,25744000.0");
//        strings.add("2018-10-05,TWTR,28.389999389648438,28.389999389648438,28.959999084472656,27.969999313354492,28.34000015258789,28996100.0");
//        strings.add("2018-10-05,SNAP,7.769999980926514,7.769999980926514,8.039999961853027,7.599999904632568,7.989999771118164,31032300.0");
//        strings.add("2018-10-05,ETSY,44.400001525878906,44.400001525878906,47.05500030517578,43.40999984741211,46.0,3494700.0");
//        strings.add("2018-10-08,FB,157.25,157.25,158.33999633789062,154.38999938964844,155.5399932861328,24046000.0");
//        strings.add("2018-10-08,TWTR,28.450000762939453,28.450000762939453,28.940000534057617,27.719999313354492,28.209999084472656,22114400.0");
//        strings.add("2018-10-08,SNAP,7.480000019073486,7.480000019073486,7.699999809265137,7.264999866485596,7.699999809265137,27870400.0");
//        strings.add("2018-10-08,ETSY,42.9900016784668,42.9900016784668,44.2400016784668,42.189998626708984,43.7400016784668,2446400.0");
//        strings.add("2018-10-09,FB,157.89999389648438,157.89999389648438,160.58999633789062,157.4199981689453,157.69000244140625,18844400.0");
//        strings.add("2018-10-09,TWTR,29.270000457763672,29.270000457763672,29.56999969482422,28.34000015258789,28.700000762939453,22749300.0");
//        strings.add("2018-10-09,SNAP,7.0,7.0,7.400000095367432,6.835000038146973,7.239999771118164,41259300.0");
//        strings.add("2018-10-09,ETSY,42.25,42.25,43.58000183105469,41.58000183105469,42.27000045776367,2595000.0");
//        strings.add("2018-10-10,FB,151.3800048828125,151.3800048828125,157.69000244140625,151.30999755859375,156.82000732421875,30610000.0");
//        List<socialMediaStocks> events= new ArrayList<>();
//        for (String i : strings)
//        {
//            String[] s=i.split(",");
////             for (String j:s){
////                System.out.print(j+"  ");
////             }
//            socialMediaStocks event= new socialMediaStocks(s[0],s[1],s[2],s[3],s[4],s[5],s[6],s[7]);
//            events.add(event);
////          System.out.println(event.toString());
////             System.out.println(i);
//        }
////       System.out.println(events);
//       KeyedStream<socialMediaStocks, String> stream = env
//               .fromElements(events.toArray(new socialMediaStocks[events.size()])).assignTimestampsAndWatermarks(
//                       WatermarkStrategy.<socialMediaStocks>forBoundedOutOfOrderness(Duration.ofSeconds(3))
//                               .withTimestampAssigner(
//                                       new SerializableTimestampAssigner<socialMediaStocks>() {
//                                          @Override
//                                          public long extractTimestamp(socialMediaStocks event, long l) {
//                                             return event.date.getTime();
//                                          }
//                                       }
//                               )
//               ).keyBy(event -> event.symbol);
      //--------------------
        //Kafka源
//        env.setParallelism(50);
        //配置连接属性
        Properties properties = new Properties();
        properties.setProperty("bootstrap.servers", "192.168.199.165:5092");
        properties.setProperty("group.id", "test");
        properties.setProperty("auto.offset.reset", "earliest");
        FlinkKafkaConsumer<String> consumer = new FlinkKafkaConsumer<>(
                "test", new SimpleStringSchema(), properties);
        KeyedStream<socialMediaStocks, String> stream = env
                .addSource(consumer)
                .name("KafkaSource").map(line->{

                    String[] fields = line.split(",");
//                    System.out.println(fields);
                    socialMediaStocks event = new socialMediaStocks(fields[0],fields[1],fields[2],fields[3],fields[4],fields[5],fields[6],fields[7]);
//                    System.out.println(event.toString());

//                                        System.out.print("Construct Evvent\n");
                    return event;
                })
//                .assignTimestampsAndWatermarks(WatermarkStrategy
//                                .<socialMediaStocks>forBoundedOutOfOrderness(Duration.ofDays(3000))
//                                .withTimestampAssigner(new SerializableTimestampAssigner<socialMediaStocks>() {
//                                    @Override
//                                    public long extractTimestamp(socialMediaStocks element, long recordTimestamp) {
////                                System.out.print("Timestamp: " + recordTimestamp+"\n");
////                                System.out.print(element.getDate().getTime()+"\n");
//                                        return element.getDate().getTime();
//                                    }
//                                })
//                )

                .keyBy(r->r.symbol);

//--------------------------------------------------------------------------------------------------------------
        Pattern<socialMediaStocks,socialMediaStocks> pattern3 = Pattern.<socialMediaStocks>begin("first")     // 以第一个登录失败事件开始
               .where(new SimpleCondition<socialMediaStocks>() {

                  @Override
                  public boolean filter(socialMediaStocks event)   throws Exception {
                      System.out.println("Processing Event:"+event.toString());
                     return event.low>5.0;
                  }
               })
               .next("second")    // 接着是第二个登录失败事件
               .where(new SimpleCondition<socialMediaStocks>() {
                  @Override
                  public boolean filter(socialMediaStocks socialMediaStocks) throws Exception {
                     return socialMediaStocks.high>5.0;
                  }
               })
               .next("third")     // 接着是第三个登录失败事件
               .where(new SimpleCondition<socialMediaStocks>() {
                  @Override
                  public boolean filter(socialMediaStocks socialMediaStocks) throws Exception {
                     return socialMediaStocks.close>5.0;
                  }
               });

       // 3. 将Pattern应用到流上，检测匹配的复杂事件，得到一个PatternStream
       PatternStream<socialMediaStocks> patternStream3= CEP.pattern(stream, pattern3);

       // 4. 将匹配到的复杂事件选择出来，然后包装成字符串报警信息输出
       patternStream3
               .select(new RichPatternSelectFunction<socialMediaStocks, String>() {
                  //                            继承RichPatternSelectFunction，输出并行的子任务序号
                  @Override
                  public void open(Configuration config) throws Exception {
                     super.open(config);

                     // 运行时上下文
                     RuntimeContext context = getRuntimeContext();

                     // 获取子任务索引
                     int subtaskIndex = context.getIndexOfThisSubtask();

                     // 打印索引
                     System.out.println(subtaskIndex);
                  }
                  @Override
                  public String select(Map<String, List<socialMediaStocks>> map) throws Exception {
                     socialMediaStocks first = map.get("first").get(0);

                     socialMediaStocks second = map.get("second").get(0);
                     socialMediaStocks third = map.get("third").get(0);
                     return first.symbol + " " + first.date + " " + first.close + " " + first.high + " " + first.low + " " + first.open + " " + first.volume + " " + first.adjClose + " " +  " " + first.volume + " " + first.volume + " " ;
                  }
               })
               .print("warning");
//      stream.print();
      env.execute();
    }

}
